@model MeLink.Web.ViewModels.IncomingOrdersViewModel

@{
    ViewData["Title"] = "Incoming Orders";
}

<div class="container py-5">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h2 fw-bold text-dark">
                <i class="fas fa-inbox text-primary me-2"></i>Incoming Orders
            </h1>
            <p class="text-muted">View and manage orders from your customers.</p>
        </div>
        <a asp-controller="Supplier" asp-action="Index" class="btn btn-primary rounded-3">
            <i class="fas fa-truck-moving me-2"></i>Order from Suppliers
        </a>
    </div>

    @if (Model.IncomingOrders.Any())
    {
        <div class="row g-4 mb-4">
            <div class="col-sm-6 col-md-3">
                <div class="card h-100 bg-primary-subtle text-primary rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <p class="text-muted mb-1 small">Total Orders</p>
                        <h3 class="fw-bold mb-0">@Model.IncomingOrders.Count()</h3>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card h-100 bg-warning-subtle text-primary rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <p class="text-muted mb-1 small">New Orders</p>
                        <h3 class="fw-bold mb-0">@Model.IncomingOrders.Count(o => o.Status == "Pending")</h3>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card h-100 bg-success-subtle text-primary rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <p class="text-muted mb-1 small">Approved Orders</p>
                        <h3 class="fw-bold mb-0">@Model.IncomingOrders.Count(o => o.Status == "Approved")</h3>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card h-100 bg-info-subtle text-primary rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <p class="text-muted mb-1 small">Shipped Orders</p>
                        <h3 class="fw-bold mb-0">@Model.IncomingOrders.Count(o => o.Status == "Shipped")</h3>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="card shadow-sm border-0 rounded-4">
        <div class="card-header bg-white border-0 pt-4 pb-3 px-4">
            <div class="row justify-content-between align-items-center g-2">
                <div class="col-md-4">
                    <h5 class="fw-bold mb-0">Incoming Orders List</h5>
                </div>
                <div class="col-md-8 d-flex justify-content-start justify-content-md-end gap-2">
                    <div class="input-group" style="max-width: 300px;">
                        <span class="input-group-text bg-light border-0"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control bg-light border-0" id="search-orders" placeholder="Search by customer name...">
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-filter me-2"></i> Filters
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="#" data-filter="all">All</a></li>
                            <li><a class="dropdown-item" href="#" data-filter="pending">Pending</a></li>
                            <li><a class="dropdown-item" href="#" data-filter="approved">Approved</a></li>
                            <li><a class="dropdown-item" href="#" data-filter="rejected">Rejected</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.IncomingOrders.Any())
            {
                <div class="table-responsive">
                    <table class="table orders-table mb-0">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer Name</th>
                                <th>Order Date</th>
                                <th>Quantity</th>
                                <th>Order Status</th>
                                <th class="text-end">Action</th>
                            </tr>
                        </thead>
                        <tbody id="orders-container">
                            @foreach (var order in Model.IncomingOrders.OrderByDescending(o => o.OrderDate))
                            {
                                <tr data-status="@order.Status.ToLower()" data-customer="@order.PharmacyName.ToLower()">
                                    <td><span class="fw-bold">#@order.OrderId</span></td>
                                    <td>@order.PharmacyName</td>
                                    <td>
                                        <small class="text-muted">
                                            <i class="fas fa-calendar-alt me-1"></i>
                                            @order.OrderDate.ToString("MMM dd, yyyy")
                                        </small>
                                    </td>
                                    <td>
                                        <small class="fw-bold">
                                            <i class="fas fa-pills me-1"></i>
                                            @order.TotalItems item@(order.TotalItems > 1 ? "s" : "")
                                        </small>
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(order.Status)">@GetStatusText(order.Status)</span>
                                    </td>
                                    <td class="text-end">
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li>
                                                    <a class="dropdown-item" asp-action="Invoice" asp-route-orderId="@order.OrderId">
                                                        <i class="fas fa-eye fa-fw me-2"></i>View Details
                                                    </a>
                                                </li>
                                                @if (order.Status == "Pending")
                                                {
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <a class="dropdown-item text-success approve-order-btn" href="#" data-order-id="@order.OrderId">
                                                            <i class="fas fa-check fa-fw me-2"></i>Approve
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item text-danger reject-order-btn" href="#" data-order-id="@order.OrderId">
                                                            <i class="fas fa-times fa-fw me-2"></i>Reject
                                                        </a>
                                                    </li>
                                                }
                                                @if (order.Status == "Approved")
                                                {
                                                    <li>
                                                        <a class="dropdown-item text-info mark-shipped-btn" href="#" data-order-id="@order.OrderId">
                                                            <i class="fas fa-shipping-fast fa-fw me-2"></i>Mark as Shipped
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="mb-4"><i class="fas fa-inbox text-muted opacity-25" style="font-size: 5rem;"></i></div>
                    <h4 class="text-muted fw-bold mb-3">No Incoming Orders</h4>
                    <p class="text-muted mb-4 lead">You currently have no orders waiting for your action.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Filter functionality
            $('.dropdown-item[data-filter]').on('click', function (e) {
                e.preventDefault();
                filterOrders($(this).data('filter'), $('#search-orders').val());
            });

            // Search functionality
            $('#search-orders').on('keyup', function () {
                const activeFilter = $('.dropdown-item.active').data('filter') || 'all';
                filterOrders(activeFilter, $(this).val());
            });

            function filterOrders(statusFilter, searchTerm) {
                $('#orders-container tr').each(function () {
                    const orderStatus = $(this).data('status');
                    const customerName = $(this).data('customer');
                    let showOrder = true;
                    if (statusFilter !== 'all' && orderStatus !== statusFilter) { showOrder = false; }
                    if (searchTerm && !customerName.toLowerCase().includes(searchTerm.toLowerCase())) { showOrder = false; }
                    if (showOrder) { $(this).show(); }
                    else { $(this).hide(); }
                });
            }

            // Action button handlers
            $('#orders-container').on('click', '.approve-order-btn', function (e) {
                e.preventDefault();
                const orderId = $(this).data('order-id');
                if (confirm('Are you sure you want to approve this order?')) {
                    window.location.href = `/Order/ApproveOrder?orderId=${orderId}`;
                }
            });

            $('#orders-container').on('click', '.reject-order-btn', function (e) {
                e.preventDefault();
                const orderId = $(this).data('order-id');
                if (confirm('Are you sure you want to reject this order?')) {
                    window.location.href = `/Order/RejectOrder?orderId=${orderId}`;
                }
            });

            $('#orders-container').on('click', '.mark-shipped-btn', function (e) {
                e.preventDefault();
                const orderId = $(this).data('order-id');
                if (confirm('Mark this order as shipped?')) {
                    window.location.href = `/Order/MarkShipped?orderId=${orderId}`;
                }
            });
        });
    </script>

    <style>
        .rounded-4 {
            border-radius: 1.5rem !important;
        }

        .bg-primary-subtle {
            background-color: #e0f2fe !important;
        }

        .bg-info-subtle {
            background-color: #cff4fc !important;
        }

        .bg-success-subtle {
            background-color: #d1e7dd !important;
        }

        .bg-warning-subtle {
            background-color: #fff3cd !important;
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
            vertical-align: middle;
        }

            .orders-table thead th {
                text-transform: uppercase;
                color: #6c757d;
                font-size: 0.8rem;
                font-weight: 600;
                padding: 1rem 1.5rem;
                border-bottom: 1px solid #e9ecef;
                text-align: left;
            }

            .orders-table tbody td {
                padding: 1rem 1.5rem;
                border-top: 1px solid #e9ecef;
                color: #212529;
                text-align: left;
            }

            .orders-table tbody tr:hover {
                background-color: #f8f9fa;
            }

            .orders-table .badge {
                padding: 0.4em 0.8em;
                border-radius: 6px;
                font-weight: 500;
                font-size: 0.8rem;
            }

        .badge.status-delivered {
            background-color: #ecfdf3;
            color: #027a48;
        }

        .badge.status-shipped, .badge.status-approved {
            background-color: #eff8ff;
            color: #175cd3;
        }

        .badge.status-pending {
            background-color: #fffaeb;
            color: #b54708;
        }

        .badge.status-cancelled, .badge.status-rejected {
            background-color: #fef3f2;
            color: #b42318;
        }

        .badge.status-unknown {
            background-color: #f8f9fc;
            color: #364254;
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(string status) => "status-" + (status ?? "unknown").ToLower();

    string GetStatusText(string status) => (status ?? "").ToLower() switch
    {
        "pending" => "Pending Review",
        "approved" => "Approved",
        "shipped" => "In Transit",
        "delivered" => "Delivered",
        "cancelled" => "Cancelled",
        "rejected" => "Rejected",
        _ => "Unknown"
    };
}