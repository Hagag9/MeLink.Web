@* Views/Order/Invoice.cshtml *@
@model MeLink.Web.ViewModels.InvoiceViewModel

@{
    ViewData["Title"] = $"Invoice #{Model.OrderId}";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">

            <!-- Invoice Header -->
            <div class="card">
                <div class="card-header bg-success text-white text-center">
                    <h3 class="mb-0">
                        <i class="fas fa-receipt"></i>
                        Medicine Order Invoice
                    </h3>
                </div>

                <div class="card-body">
                    <!-- Order Information -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="border p-3 rounded">
                                <h5 class="text-primary">
                                    <i class="fas fa-user"></i> Patient Information
                                </h5>
                                <p class="mb-1"><strong>Name:</strong> @Model.PatientName</p>
                                <p class="mb-1"><strong>Order ID:</strong> #@Model.OrderId</p>
                                <p class="mb-0"><strong>Order Date:</strong> @Model.OrderDate.ToString("dd/MM/yyyy - hh:mm tt")</p>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="border p-3 rounded">
                                <h5 class="text-info">
                                    <i class="fas fa-store"></i> Pharmacy Information
                                </h5>
                                <p class="mb-1"><strong>Pharmacy Name:</strong> @Model.PharmacyName</p>
                                @if (!string.IsNullOrEmpty(Model.PharmacyAddress))
                                {
                                    <p class="mb-1"><strong>Address:</strong> @Model.PharmacyAddress</p>
                                }
                                <p class="mb-0">
                                    <strong>Order Status:</strong>
                                    <span class="badge @GetStatusBadgeClass(Model.Status)">
                                        @GetStatusText(Model.Status)
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Medicine Details -->
                    <div class="table-responsive mb-4">
                        <table class="table table-bordered">
                            <thead class="table-primary">
                                <tr class="text-center">
                                    <th>Medicine</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <strong>@item.MedicineName</strong>
                                            @if (!string.IsNullOrEmpty(item.BrandName))
                                            {
                                                <br>
                                        
                                                <small class="text-muted">(@item.BrandName)</small>
                                            }
                                        </td>
                                        <td class="text-center">@item.Quantity</td>
                                        <td class="text-center">@item.UnitPrice.ToString("N2") EGP</td>
                                        <td class="text-center"><strong>@item.Total.ToString("N2") EGP</strong></td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-success">
                                    <th colspan="3" class="text-center">Grand Total</th>
                                    <th class="text-center">
                                        <h5 class="mb-0">@Model.TotalAmount.ToString("N2") EGP</h5>
                                    </th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <!-- Action Buttons -->
                    <div class="row">
                        <div class="col-md-6">
                            <a asp-action="Index" class="btn btn-primary">
                                <i class="fas fa-arrow-left"></i> New Order
                            </a>
                            <a asp-action="MyOrders" class="btn btn-info">
                                <i class="fas fa-list"></i> My Orders
                            </a>
                        </div>
                        <div class="col-md-6 text-end">
                            <button type="button" class="btn btn-success" onclick="printInvoice()">
                                <i class="fas fa-print"></i> Print Invoice
                            </button>
                            <button type="button" class="btn btn-secondary" onclick="downloadPDF()">
                                <i class="fas fa-download"></i> Download PDF
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Success Message -->
            <div class="alert alert-success mt-4 text-center">
                <i class="fas fa-check-circle fa-2x mb-2"></i>
                <h4>Your order has been created successfully!</h4>
                <p class="mb-0">The pharmacy will contact you soon to confirm medicine availability and arrange delivery.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function printInvoice() {
            window.print();
        }

        function downloadPDF() {
            showNotification('PDF download feature will be added soon', 'info');
        }

        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

            document.body.appendChild(alertDiv);

            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 3000);
        }
    </script>

    <style>
        @@media print {
            .btn, .alert

        {
            display: none !important;
        }

        .card {
            border: none !important;
            box-shadow: none !important;
        }

        .card-header {
            background-color: #198754 !important;
            -webkit-print-color-adjust: exact;
        }

        }

        .border {
            border: 1px solid #dee2e6 !important;
        }

        .table th, .table td {
            vertical-align: middle;
        }

        .badge {
            font-size: 0.9em;
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Approved" => "bg-info",
            "Shipped" => "bg-primary",
            "Delivered" => "bg-success",
            "Cancelled" => "bg-danger",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Pending",
            "Approved" => "Approved",
            "Shipped" => "Shipped",
            "Delivered" => "Delivered",
            "Cancelled" => "Cancelled",
            "Rejected" => "Rejected",
            _ => "Unknown"
        };
    }
}