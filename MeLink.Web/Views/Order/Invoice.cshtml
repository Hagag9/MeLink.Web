@* Views/Order/Invoice.cshtml *@
@model MeLink.Web.ViewModels.InvoiceViewModel

@{
    ViewData["Title"] = $"Invoice #{Model.OrderId}";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-9">

            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-md-5">

                    <div class="d-flex justify-content-between align-items-center mb-5">
                        <div class="d-flex align-items-center">
                            <div class="icon-circle bg-success-subtle text-success me-3">
                                <i class="fas fa-receipt fa-2x"></i>
                            </div>
                            <div>
                                <h1 class="display-6 fw-bold mb-0">Invoice</h1>
                                <p class="text-muted lead-sm mb-0">For Order #@Model.OrderId</p>
                            </div>
                        </div>
                        <div class="text-end">
                            <h5 class="mb-0 fw-bold">MeLink</h5>
                            <p class="mb-0 text-muted">A modern solution for medicine delivery.</p>
                        </div>
                    </div>

                    <div class="row mb-5">
                        <div class="col-md-6 mb-4 mb-md-0">
                            <div class="p-4 bg-primary-subtle rounded-3 h-100">
                                <h5 class="fw-bold text-primary mb-3">
                                    <i class="fas fa-user-circle me-2"></i> Customer Details
                                </h5>
                                <p class="mb-1"><strong>Name:</strong> @Model.PatientName</p>
                                <p class="mb-0"><strong>Order Date:</strong> @Model.OrderDate.ToString("dd MMMM, yyyy")</p>
                                <p class="mb-0"><strong>Order Time:</strong> @Model.OrderDate.ToString("hh:mm tt")</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="p-4 bg-info-subtle rounded-3 h-100">
                                <h5 class="fw-bold text-info mb-3">
                                    <i class="fas fa-store me-2"></i> Pharmacy Details
                                </h5>
                                <p class="mb-1"><strong>Pharmacy:</strong> @Model.PharmacyName</p>
                                @if (!string.IsNullOrEmpty(Model.PharmacyAddress))
                                {
                                    <p class="mb-1"><strong>Address:</strong> @Model.PharmacyAddress</p>
                                }
                                <div class="d-flex align-items-center mt-2">
                                    <strong class="me-2">Status:</strong>
                                    <span class="badge rounded-pill @GetStatusBadgeClass(Model.Status) py-2 px-3 fw-normal">
                                        @GetStatusText(Model.Status)
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="table-responsive mb-5 rounded-3 border">
                        <table class="table table-striped table-hover align-middle mb-0">
                            <thead class="table-primary">
                                <tr>
                                    <th scope="col" class="py-3">Medicine</th>
                                    <th scope="col" class="text-center py-3">Quantity</th>
                                    <th scope="col" class="text-center py-3">Unit Price</th>
                                    <th scope="col" class="text-center py-3">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <div class="fw-bold">@item.MedicineName</div>
                                            @if (!string.IsNullOrEmpty(item.BrandName))
                                            {
                                                <small class="text-muted">(@item.BrandName)</small>
                                            }
                                        </td>
                                        <td class="text-center">@item.Quantity</td>
                                        <td class="text-center">@item.UnitPrice.ToString("N2") EGP</td>
                                        <td class="text-center fw-bold text-dark">@item.Total.ToString("N2") EGP</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-success fw-bold">
                                    <td colspan="3" class="text-end py-3">Grand Total</td>
                                    <td class="text-center py-3 fs-5 text-success">@Model.TotalAmount.ToString("N2") EGP</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div class="d-flex flex-column flex-md-row justify-content-center justify-content-md-between gap-3">
                        <a asp-action="MyOrders" class="btn btn-primary rounded-pill px-4">
                            <i class="fas fa-arrow-left me-2"></i> Back to Orders
                        </a>
                        <div>
                            <button type="button" class="btn btn-success rounded-pill px-4 me-2" onclick="printInvoice()">
                                <i class="fas fa-print me-2"></i> Print Invoice
                            </button>
                            <button type="button" class="btn btn-secondary rounded-pill px-4" onclick="downloadPDF()">
                                <i class="fas fa-download me-2"></i> Download PDF
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="alert alert-success alert-dismissible fade show text-center mt-4 rounded-3 shadow-sm" role="alert"
                 id="invoice-alert" style="display: none;">
                <i class="fas fa-check-circle fa-2x mb-2"></i>
                <h4 class="fw-bold">Your order has been created successfully!</h4>
                <p class="mb-0">The pharmacy will contact you soon to confirm availability and arrange delivery.</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function printInvoice() {
            window.print();
        }

        function downloadPDF() {
            showNotification('PDF download feature will be added soon', 'info');
        }

        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alertDiv);
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 3000);
        }

        // Check for a success message passed via TempData and display it.
        // This is a placeholder since the original code didn't have a TempData check here.
        document.addEventListener('DOMContentLoaded', function() {
             // You can use a URL parameter to show the message, e.g., /Order/Invoice/{id}?success=true
             const urlParams = new URLSearchParams(window.location.search);
             if (urlParams.get('success') === 'true') {
                 document.getElementById('invoice-alert').style.display = 'block';
             }
        });
    </script>

    <style>
        .container {
            font-family: 'Arial', sans-serif;
        }

        .card {
            border: none;
        }

        .rounded-4 {
            border-radius: 1.5rem !important;
        }

        .shadow-lg {
            box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
        }

        .icon-circle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .lead-sm {
            font-size: 1.15rem;
        }

        .bg-primary-subtle {
            background-color: #e0f2fe !important;
        }

        .bg-info-subtle {
            background-color: #cff4fc !important;
        }

        .bg-success-subtle {
            background-color: #d1e7dd !important;
        }

        .table-responsive {
            border-radius: 1rem;
            overflow: hidden;
        }

        .table thead th {
            font-weight: 600;
            color: white;
            text-transform: uppercase;
        }

        .table-primary {
            background-color: #0d6efd !important;
        }

            .table-primary th {
                color: white !important;
            }

        .rounded-3 {
            border-radius: .75rem !important;
        }

        .btn.rounded-pill {
            border-radius: 50rem !important;
        }

        .badge.rounded-pill {
            border-radius: 50rem !important;
            font-size: 0.85em;
        }

        @@media print {
            body {
                background-color: white !important;
            }

            .container {
                box-shadow: none !important;
                border: none !important;
            }

            .btn, .alert {
                display: none !important;
            }

            .card {
                box-shadow: none !important;
                border: none !important;
            }
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Approved" => "bg-info text-dark",
            "Shipped" => "bg-primary text-white",
            "Delivered" => "bg-success text-white",
            "Cancelled" => "bg-danger text-white",
            "Rejected" => "bg-danger text-white",
            _ => "bg-secondary text-white"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Pending",
            "Approved" => "Approved",
            "Shipped" => "Shipped",
            "Delivered" => "Delivered",
            "Cancelled" => "Cancelled",
            "Rejected" => "Rejected",
            _ => "Unknown"
        };
    }
}