@* Views/Order/Invoice.cshtml *@
@model MeLink.Web.ViewModels.InvoiceViewModel

@{
    ViewData["Title"] = $"Invoice #{Model.OrderId}";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-9">

            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-md-5">

                    <div class="row justify-content-between align-items-center mb-4">
                        <div class="col-md-6">
                            <i class="fas fa-pills fa-4x mb-2 text-primary"></i>
                        </div>
                        <div class="col-md-6 text-md-end mt-3 mt-md-0">
                            <h1 class="display-6 fw-bold text-primary mb-1">INVOICE</h1>
                            <p class="text-muted mb-0"><strong>For Order #</strong> @Model.OrderId</p>
                            <p class="text-muted mb-0"><strong>Date Issued:</strong> @Model.OrderDate.ToString("dd MMMM, yyyy")</p>
                        </div>
                    </div>

                    <hr class="my-4" />

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h5 class="fw-bold mb-3">
                                <i class="fas fa-user-circle me-2"></i> Customer Details
                            </h5>
                            <p class="mb-1">@Model.PatientName</p>
                            <p class="text-muted mb-0">Order Time: @Model.OrderDate.ToString("hh:mm tt")</p>
                            <p class="text-muted mb-0">Delivery Time: @Model.DeliveryTime</p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <h5 class="fw-bold mb-3">
                                <i class="fas fa-store me-2"></i> Supplier Details
                            </h5>
                            <p class="mb-1">@Model.PharmacyName</p>
                            @if (!string.IsNullOrEmpty(Model.PharmacyAddress))
                            {
                                <p class="text-muted mb-1">@Model.PharmacyAddress</p>
                            }
                        </div>
                    </div>

                    <div class="table-responsive mb-4">
                        <table class="table invoice-table">
                            <thead class="invoice-table-header">
                                <tr>
                                    <th scope="col">Description</th>
                                    <th scope="col" class="text-center">Qty</th>
                                    <th scope="col" class="text-end">Unit Price</th>
                                    <th scope="col" class="text-end">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <div class="fw-bold">@item.MedicineName</div>
                                            @if (!string.IsNullOrEmpty(item.BrandName))
                                            {
                                                <small class="text-muted">(@item.BrandName)</small>
                                            }
                                        </td>
                                        <td class="text-center">@item.Quantity</td>
                                        <td class="text-end">@item.UnitPrice.ToString("N2") EGP</td>
                                        <td class="text-end fw-bold">@item.Total.ToString("N2") EGP</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row justify-content-end">
                        <div class="col-md-5">
                            <div class="invoice-totals">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Subtotal</span>
                                    <span>@Model.TotalAmount.ToString("N2") EGP</span>
                                </div>
                                <hr class="my-2" />
                                <div class="d-flex justify-content-between fw-bold fs-5">
                                    <span class="text-primary">Grand Total</span>
                                    <span class="text-primary">@Model.TotalAmount.ToString("N2") EGP</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <hr class="my-4" />

                    <div class="row align-items-start">
                        <div class="col-md-8">
                            <h6 class="fw-bold">Notes</h6>
                            <p class="text-muted small">Thank you for your business. Please contact us with any questions regarding this invoice.</p>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Status))
                        {
                            <div class="col-md-4 text-md-end">
                                <h6 class="fw-bold me-3">Status</h6>
                                <span class="badge rounded-pill @GetStatusBadgeClass(Model.Status) fs-6 fw-normal">
                                    @GetStatusText(Model.Status)
                                </span>
                            </div>
                        }
                    </div>

                </div>
            </div>

            <div class="d-flex flex-column flex-md-row justify-content-center justify-content-md-between gap-3 mt-4">
                <a asp-action="MyOrders" class="btn btn-outline-primary rounded-pill px-4">
                    <i class="fas fa-arrow-left me-2"></i> Back to Orders
                </a>
                <div>
                    <button type="button" class="btn btn-success rounded-pill px-4 me-2" onclick="printInvoice()">
                        <i class="fas fa-print me-2"></i> Print
                    </button>
                    <button type="button" class="btn btn-secondary rounded-pill px-4" onclick="downloadPDF()">
                        <i class="fas fa-download me-2"></i> Download
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        function printInvoice() { window.print(); }
        // The rest of your JavaScript can remain the same
        function downloadPDF() {
            showNotification('PDF download feature will be added soon', 'info');
        }
    </script>

    <style>
        body {
            background-color: #f8f9fa;
        }

        .card {
            border: 1px solid #dee2e6;
        }

        .rounded-4 {
            border-radius: .75rem !important;
        }

        .shadow-lg {
            box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,.1) !important;
        }

        .invoice-table {
            margin-bottom: 0;
        }

            .invoice-table thead.invoice-table-header th {
                background-color: #f8f9fa;
                color: var(--bs-primary);
                text-transform: uppercase;
                letter-spacing: 0.5px;
                font-weight: 600;
                border-bottom: 2px solid #dee2e6;
                padding-top: 1rem;
                padding-bottom: 1rem;
            }

            .invoice-table tbody tr td {
                padding-top: 1rem;
                padding-bottom: 1rem;
                vertical-align: middle;
                border-bottom: 1px solid #dee2e6;
            }

            .invoice-table tbody tr:last-child td {
                border-bottom: none;
            }

        .invoice-totals {
            padding: 1.5rem;
            background-color: #f8f9fa;
            border-radius: 0.5rem;
        }

        @@media print {
            body {
                background-color: white !important;
            }

            .card {
                box-shadow: none !important;
                border: none !important;
            }

            .btn, .alert, .footer-enhanced, #main-nav {
                display: none !important;
            }
        }
    </style>
}

@functions {
    // === FINAL UPDATE: This function now returns the most basic, compatible Bootstrap 5 classes ===
    string GetStatusBadgeClass(string status)
    {
        return (status ?? "").ToLower() switch
        {
            "pending" => "bg-warning text-dark",
            "approved" => "bg-info text-dark",
            "shipped" => "bg-primary",
            "delivered" => "bg-success",
            "cancelled" => "bg-danger",
            "rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    // This function returns the status text as is.
    string GetStatusText(string status) => status;
}