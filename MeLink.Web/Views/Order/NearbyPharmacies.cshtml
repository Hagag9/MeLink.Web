@model MeLink.Web.ViewModels.NearbyPharmaciesViewModel

@{
    ViewData["Title"] = "Nearby Pharmacies";
}

<div class="container py-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold text-primary">Nearby Pharmacies</h1>
        <p class="lead text-muted">Choose a pharmacy and select how you'd like to order.</p>
    </div>

    @if (!Model.Pharmacies.Any())
    {
        <div class="alert alert-info text-center rounded-3 p-4" role="alert">
            <h5 class="alert-heading"><i class="fas fa-info-circle me-2"></i> No Pharmacies Found</h5>
            <p class="mb-0">It seems there are no pharmacies found near your location at the moment.</p>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var pharmacy in Model.Pharmacies)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card pharmacy-card shadow-sm h-100 rounded-4">
                        <div class="card-body p-2 d-flex flex-column">
                            
                            <div class="text-center flex-grow-1">
                                <div class="icon-circle-xs bg-primary-subtle text-primary mx-auto mb-2">
                                    <i class="fas fa-clinic-medical"></i>
                                </div>
                                <h5 class="card-title text-dark fw-bold fs-6">@pharmacy.DisplayName</h5>

                                <p class="card-text text-muted small mb-1">
                                    <i class="fas fa-map-marker-alt me-1"></i>
                                    @(!string.IsNullOrEmpty(pharmacy.Address) ? pharmacy.Address : "Address not available")
                                </p>
                                
                                <p class="card-text text-muted small">
                                    <i class="fas fa-road me-1"></i>
                                    @if (pharmacy.DistanceInKm.HasValue)
                                    {
                                        <span>@($"{pharmacy.DistanceInKm.Value:F2} km away")</span>
                                    }
                                </p>
                                
                                <div class="mt-2">
                                    @if (pharmacy.IsOpen) 
                                    {
                                        <span class="badge rounded-pill @GetStatusBadgeClass(pharmacy.IsOpen)">
                                            <i class="fas fa-check-circle me-1"></i> Open Now
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge rounded-pill @GetStatusBadgeClass(pharmacy.IsOpen)">
                                            <i class="fas fa-times-circle me-1"></i> Closed
                                        </span>
                                    }
                                </div>
                            </div>
                            
                            <div class="mt-2 pt-2 border-top">
                                <div class="d-grid gap-2">
                                    <a asp-controller="Order" asp-action="Index" asp-route-supplierId="@pharmacy.UserId" class="btn btn-primary rounded-pill btn-sm">
                                        <i class="fas fa-pills me-2"></i> Browse Medicines
                                    </a>
                                    <a asp-controller="Order" asp-action="CreatePrescriptionOrder" asp-route-supplierId="@pharmacy.UserId" class="btn btn-outline-secondary rounded-pill btn-sm">
                                        <i class="fas fa-file-prescription me-2"></i> Order with Prescription
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .pharmacy-card {
        border: 1px solid transparent;
        border-radius: 1rem !important;
        transition: all 0.3s ease-in-out;
        background-color: #f5f9ff; 
    }

    .pharmacy-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12) !important;
        border-color: var(--bs-primary);
        background-color: #ffffff;
    }

    /* === UPDATED: A new, extra-small icon circle class === */
    .icon-circle-xs {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .badge-status-open {
        background-color: #d1e7dd !important;
        color: #0a3622 !important;
    }

    .badge-status-closed {
        background-color: #f8d7da !important;
        color: #58151c !important;
    }

</style>

@functions {
    string GetStatusBadgeClass(bool isOpen)
    {
        return isOpen ? "badge-status-open" : "badge-status-closed";
    }
}