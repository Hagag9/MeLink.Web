@model MeLink.Web.ViewModels.OrderSearchViewModel

@{
    ViewData["Title"] = "Order Medicines";
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        <i class="fas fa-exclamation-triangle"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <i class="fas fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <h2 class="mb-4 text-center text-primary">
                <i class="fas fa-pills me-2"></i>
                Order Medicines
            </h2>

            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <form asp-controller="Order"
                          asp-action="@(string.IsNullOrEmpty(Model.SupplierId) ? "Index" : "BrowseMedicines")"
                          method="get" class="d-flex">

                        @if (!string.IsNullOrEmpty(Model.SupplierId))
                        {
                            <input type="hidden" name="supplierId" value="@Model.SupplierId" />
                        }

                        <input type="text" name="searchTerm" class="form-control form-control-lg me-2"
                               placeholder="Search by name or active ingredient..." value="@Model.SearchTerm">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-search me-1"></i> Search
                        </button>
                    </form>
                </div>
            </div>

            <div id="cart" class="card shadow-sm mb-4" style="display: none;">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-shopping-cart me-2"></i> Shopping Cart</h5>
                    <button type="button" class="btn btn-sm btn-light" onclick="clearCart()">
                        <i class="fas fa-trash me-1"></i> Clear Cart
                    </button>
                </div>
                <div class="card-body">
                    <div id="cart-items"></div>
                    <hr class="my-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong>Total: <span id="cart-total" class="text-success fs-5">0.00</span> EGP</strong>
                        </div>
                        <div>
                            <button type="button" class="btn btn-success" onclick="proceedToOrder()">
                                <i class="fas fa-shopping-bag me-1"></i> Proceed to Order
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.AvailableMedicines.Any())
            {
                <div class="card shadow-sm">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">Available Medicines (@Model.AvailableMedicines.Count)</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover table-striped mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="col-4">Medicine</th>
                                        <th class="col-2">Source</th>
                                        <th class="col-2">Price</th>
                                        <th class="col-2">Available</th>
                                        <th class="col-2">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var medicine in Model.AvailableMedicines)
                                    {
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong class="d-block">@medicine.GenericName</strong>
                                                    @if (!string.IsNullOrEmpty(medicine.BrandName))
                                                    {
                                                        <small class="text-muted">(@medicine.BrandName)</small>
                                                    }
                                                    <small class="d-block text-info">@medicine.DosageForm - @medicine.Strength</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong class="d-block">@medicine.PharmacyName</strong>
                                                    @if (!string.IsNullOrEmpty(medicine.PharmacyAddress))
                                                    {
                                                        <small class="text-muted">@medicine.PharmacyAddress</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-success fs-6">@medicine.Price.ToString("C")</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@medicine.StockQuantity units</span>
                                            </td>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <input type="number" class="form-control" id="qty-@medicine.InventoryId"
                                                           value="1" min="1" max="@medicine.StockQuantity">
                                                    <button class="btn btn-outline-primary" type="button"
                                                            onclick="addToCart(@medicine.InventoryId, '@medicine.GenericName', '@medicine.BrandName', '@medicine.PharmacyName', @medicine.Price, '@medicine.PharmacyId')">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <div class="alert alert-warning text-center">
                    <i class="fas fa-exclamation-triangle"></i>
                    No medicines found containing "<strong>@Model.SearchTerm</strong>"
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle"></i>
                    Use the search bar above to find the medicines you need.
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="orderModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Confirm Order</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form id="orderForm" asp-action="ConfirmOrder" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div id="order-summary"></div>

                    <hr>

                    <div class="mb-3">
                        <label class="form-label">Upload Prescription (Optional)</label>
                        <input type="file" class="form-control" name="PrescriptionFile" accept="image/*,.pdf">
                        <small class="form-text text-muted">You can upload an image of your prescription or PDF file</small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Additional Notes</label>
                        <textarea class="form-control" name="Notes" rows="3" placeholder="Any notes or special instructions..."></textarea>
                    </div>

                    <input type="hidden" name="PatientId" value="">
                    <input type="hidden" name="PharmacyId" id="pharmacy-id">
                    <input type="hidden" name="PharmacyName" id="pharmacy-name">
                    <div id="hidden-items"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Confirm Order</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // (Your existing JavaScript code remains here)
        let cart = [];
        let currentPharmacyId = null;
        let currentPharmacyName = null;

        function addToCart(inventoryId, medicineName, brandName, pharmacyName, price, pharmacyId) {
            const quantity = parseInt(document.getElementById('qty-' + inventoryId).value);

            if (currentPharmacyId && currentPharmacyId !== pharmacyId) {
                if (!confirm('You cannot order from different pharmacies/suppliers in the same order. Do you want to clear the cart and start over?')) {
                    return;
                }
                clearCart();
            }

            currentPharmacyId = pharmacyId;
            currentPharmacyName = pharmacyName;

            const existingItem = cart.find(item => item.inventoryId === inventoryId);
            if (existingItem) {
                existingItem.quantity += quantity;
            } else {
                cart.push({
                    inventoryId: inventoryId,
                    medicineName: medicineName,
                    brandName: brandName,
                    price: price,
                    quantity: quantity
                });
            }

            updateCartDisplay();
            showNotification('Medicine added to cart', 'success');
        }

        function updateCartDisplay() {
            const cartDiv = document.getElementById('cart');
            const cartItemsDiv = document.getElementById('cart-items');
            const cartTotalSpan = document.getElementById('cart-total');

            if (cart.length === 0) {
                cartDiv.style.display = 'none';
                return;
            }

            cartDiv.style.display = 'block';

            let html = `<div class="mb-2"><strong>Source: ${currentPharmacyName}</strong></div>`;
            let total = 0;

            cart.forEach((item, index) => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;

                html += `
                    <div class="row mb-2 p-2 border rounded">
                        <div class="col-md-6">
                            <strong>${item.medicineName}</strong>
                            ${item.brandName ? `<br><small>(${item.brandName})</small>` : ''}
                        </div>
                        <div class="col-md-2 text-center">
                            ${item.quantity} × ${item.price.toFixed(2)}
                        </div>
                        <div class="col-md-2 text-center">
                            <strong>${itemTotal.toFixed(2)} EGP</strong>
                        </div>
                        <div class="col-md-2 text-end">
                            <button type="button" class="btn btn-sm btn-danger" onclick="removeFromCart(${index})">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                `;
            });

            cartItemsDiv.innerHTML = html;
            cartTotalSpan.textContent = total.toFixed(2);
        }

        function removeFromCart(index) {
            cart.splice(index, 1);
            if (cart.length === 0) {
                currentPharmacyId = null;
                currentPharmacyName = null;
            }
            updateCartDisplay();
        }

        function clearCart() {
            cart = [];
            currentPharmacyId = null;
            currentPharmacyName = null;
            updateCartDisplay();
        }

        function proceedToOrder() {
            if (cart.length === 0) {
                showNotification('Cart is empty', 'warning');
                return;
            }

            document.getElementById('pharmacy-id').value = currentPharmacyId;
            document.querySelector('input[name="PharmacyName"]').value = currentPharmacyName;

            let summaryHtml = `
                <div class="alert alert-info">
                    <strong>Source:</strong> ${currentPharmacyName}<br>
                    <strong>Number of Items:</strong> ${cart.length}
                </div>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Medicine</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
            `;

            let total = 0;
            cart.forEach((item, index) => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                summaryHtml += `
                    <tr>
                        <td>${item.medicineName}</td>
                        <td>${item.quantity}</td>
                        <td>${item.price.toFixed(2)} EGP</td>
                        <td>${itemTotal.toFixed(2)} EGP</td>
                    </tr>
                `;
            });

            summaryHtml += `
                        </tbody>
                        <tfoot>
                            <tr class="table-success">
                                <th colspan="3">Total</th>
                                <th>${total.toFixed(2)} EGP</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            `;

            document.getElementById('order-summary').innerHTML = summaryHtml;

            let hiddenItemsHtml = '';
            cart.forEach((item, index) => {
                hiddenItemsHtml += `
                    <input type="hidden" name="OrderItems[${index}].InventoryId" value="${item.inventoryId}">
                    <input type="hidden" name="OrderItems[${index}].MedicineName" value="${item.medicineName}">
                    <input type="hidden" name="OrderItems[${index}].BrandName" value="${item.brandName || ''}">
                    <input type="hidden" name="OrderItems[${index}].UnitPrice" value="${item.price}">
                    <input type="hidden" name="OrderItems[${index}].Quantity" value="${item.quantity}">
                `;
            });
            document.getElementById('hidden-items').innerHTML = hiddenItemsHtml;

            new bootstrap.Modal(document.getElementById('orderModal')).show();
        }

        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

            document.body.appendChild(alertDiv);

            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 3000);
        }

        document.addEventListener('DOMContentLoaded', function() {
            const quantityInputs = document.querySelectorAll('input[type="number"]');
            quantityInputs.forEach(input => {
                input.addEventListener('change', function() {
                    if (this.value < 1) this.value = 1;
                    if (this.value > this.max) this.value = this.max;
                });
            });
        });
    </script>

    <style>
        /* General styling improvements for a more polished look */
        .card {
            border-radius: 0.75rem;
            border: none;
        }

        .card-header {
            border-top-left-radius: 0.75rem;
            border-top-right-radius: 0.75rem;
        }

        .table-responsive {
            border-radius: 0.75rem;
        }

        .table thead th {
            border-bottom: 2px solid #dee2e6;
        }

        .input-group-sm .form-control,
        .input-group-sm .btn {
            height: calc(1.5em + .5rem + 2px);
            padding: .25rem .5rem;
            font-size: .875rem;
        }

        .badge {
            font-size: 0.85em;
            padding: 0.5em 0.8em;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }
    </style>
}