@* Views/Order/MyOrders.cshtml *@
@model List<MeLink.Web.ViewModels.OrderSummaryViewModel>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container py-5">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-5">
        <div class="text-center text-md-start mb-3 mb-md-0">
            <h1 class="display-6 fw-bold text-dark">
                <i class="fas fa-clipboard-list text-primary me-3"></i>
                My Orders
            </h1>
            <p class="text-muted lead-sm">Track and manage your medicine orders.</p>
        </div>
        <div>
            <a asp-action="Create" class="btn btn-primary btn-lg rounded-pill px-4 shadow-sm">
                <i class="fas fa-plus me-2"></i>
                Place New Order
            </a>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="row g-4 mb-5">
            <div class="col-md-3">
                <div class="card h-100 border-primary bg-primary-subtle text-primary rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <i class="fas fa-shopping-cart fa-2x mb-2 opacity-50"></i>
                        <h4 class="fw-bold mb-1">@Model.Count()</h4>
                        <small class="text-muted fw-semibold">Total Orders</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card h-100 border-warning bg-warning-subtle text-warning rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <i class="fas fa-clock fa-2x mb-2 opacity-50"></i>
                        <h4 class="fw-bold mb-1">@Model.Count(o => o.Status == "Pending")</h4>
                        <small class="text-muted fw-semibold">Pending Orders</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card h-100 border-success bg-success-subtle text-success rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <i class="fas fa-check-circle fa-2x mb-2 opacity-50"></i>
                        <h4 class="fw-bold mb-1">@Model.Count(o => o.Status == "Delivered")</h4>
                        <small class="text-muted fw-semibold">Delivered Orders</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card h-100 border-info bg-info-subtle text-info rounded-4 shadow-sm">
                    <div class="card-body text-center p-4">
                        <i class="fas fa-pills fa-2x mb-2 opacity-50"></i>
                        <h4 class="fw-bold mb-1">@Model.Sum(o => o.TotalItems)</h4>
                        <small class="text-muted fw-semibold">Total Items</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm mb-4 rounded-4">
            <div class="card-body py-3">
                <div class="row align-items-center g-3">
                    <div class="col-md-6">
                        <div class="btn-group w-100" role="group" aria-label="Status filter">
                            <button type="button" class="btn btn-outline-secondary active" data-filter="all">All</button>
                            <button type="button" class="btn btn-outline-warning" data-filter="pending">Pending</button>
                            <button type="button" class="btn btn-outline-success" data-filter="delivered">Delivered</button>
                            <button type="button" class="btn btn-outline-danger" data-filter="cancelled">Cancelled</button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-white border-end-0 text-muted rounded-start-3"><i class="fas fa-search"></i></span>
                            <input type="text" class="form-control border-start-0 rounded-end-3" id="search-orders"
                                   placeholder="Search by pharmacy name...">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row g-4" id="orders-container">
            @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
            {
                <div class="col-lg-4 col-md-6 order-card"
                     data-status="@order.Status.ToLower()"
                     data-pharmacy="@order.PharmacyName.ToLower()">

                    <div class="card h-100 shadow-sm border-0 rounded-4 order-item">
                        <div class="card-header @GetStatusHeaderClass(order.Status) text-white border-0 rounded-top-4 py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="mb-0 fw-bold text-dark">Order #@order.OrderId</h6>
                                <span class="badge bg-light text-dark px-3 py-2 rounded-pill">
                                    @Html.Raw(GetStatusIcon(order.Status)) @GetStatusText(order.Status)
                                </span>
                            </div>
                        </div>

                        <div class="card-body p-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="mb-0 text-dark fw-bold">@order.PharmacyName</h6>
                                <small class="text-muted">
                                    <i class="fas fa-calendar-alt me-1"></i>
                                    @order.OrderDate.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            <small class="text-info fw-bold">
                                <i class="fas fa-pills me-1"></i>
                                @order.TotalItems item@(order.TotalItems > 1 ? "s" : "")
                            </small>

                            @if (order.Status == "Pending" || order.Status == "Approved" || order.Status == "Shipped")
                            {
                                <div class="mt-3">
                                    <div class="progress rounded-pill" style="height: 8px;">
                                        <div class="progress-bar @GetProgressBarClass(order.Status)"
                                             role="progressbar"
                                             style="width: @GetProgressPercentage(order.Status)%"
                                             aria-valuenow="@GetProgressPercentage(order.Status)"
                                             aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                    </div>
                                    <div class="text-muted small mt-1">@GetProgressText(order.Status)</div>
                                </div>
                            }
                        </div>

                        <div class="card-footer bg-transparent border-0 pt-0 pb-3">
                            <div class="d-grid gap-2">
                                <a asp-action="Invoice" asp-route-orderId="@order.OrderId"
                                   class="btn btn-outline-primary rounded-pill">
                                    <i class="fas fa-eye me-2"></i>
                                    View Details
                                </a>

                                @if (order.Status == "Pending")
                                {
                                    <button type="button"
                                            class="btn btn-outline-danger rounded-pill cancel-order-btn"
                                            data-order-id="@order.OrderId"
                                            data-pharmacy="@order.PharmacyName">
                                        <i class="fas fa-times me-2"></i>
                                        Cancel Order
                                    </button>
                                }
                                else if (order.Status == "Delivered")
                                {
                                    <button type="button" class="btn btn-outline-success rounded-pill">
                                        <i class="fas fa-star me-2"></i>
                                        Rate Order
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="no-results" class="text-center py-5" style="display: none;">
            <div class="mb-4">
                <i class="fas fa-search text-muted opacity-25" style="font-size: 5rem;"></i>
            </div>
            <h4 class="text-muted fw-bold mb-2">No Orders Found</h4>
            <p class="text-muted lead-sm">Try adjusting your search or filter criteria.</p>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-clipboard-list text-muted opacity-25" style="font-size: 5rem;"></i>
            </div>
            <h4 class="text-muted fw-bold mb-3">No Orders Yet</h4>
            <p class="text-muted mb-4 lead">
                You haven't placed any medicine orders yet.<br>
                Start by searching for the medicines you need.
            </p>
            <a asp-action="Index" class="btn btn-primary btn-lg rounded-pill px-5 shadow-sm">
                <i class="fas fa-plus me-2"></i>
                Place Your First Order
            </a>
        </div>
    }
</div>

<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-lg">
            <div class="modal-header bg-danger text-white border-0 rounded-top-4">
                <h5 class="modal-title" id="cancelOrderModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Cancel Order
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4 text-center">
                <div class="mb-3">
                    <i class="fas fa-question-circle fa-4x text-warning"></i>
                </div>
                <h5 class="fw-bold mb-3">Are you sure you want to cancel this order?</h5>
                <p class="text-muted lead-sm mb-4">This action cannot be undone and will release any reserved medicines back to inventory.</p>
                <div class="alert alert-info rounded-3 text-start">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-info-circle me-2 fs-5"></i>
                        <div>
                            <strong class="text-dark">Order Details:</strong><br>
                            <span id="cancel-order-details" class="small"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-center border-0 p-4">
                <button type="button" class="btn btn-secondary rounded-pill me-3" data-bs-dismiss="modal">
                    <i class="fas fa-arrow-left me-2"></i>
                    Keep Order
                </button>
                <form id="cancel-order-form" method="post" style="display: inline;">
                    <input type="hidden" name="orderId" id="cancel-order-id">
                    <button type="submit" class="btn btn-danger rounded-pill">
                        <i class="fas fa-times me-2"></i>
                        Yes, Cancel Order
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // Filter functionality
            $('[data-filter]').on('click', function () {
                const filter = $(this).data('filter');

                // Update active button
                $('[data-filter]').removeClass('active');
                $(this).addClass('active');

                // Filter orders
                filterOrders(filter, $('#search-orders').val());
            });

            // Search functionality
            $('#search-orders').on('keyup', function () {
                const searchTerm = $(this).val();
                const activeFilter = $('[data-filter].active').data('filter');
                filterOrders(activeFilter, searchTerm);
            });

            // Cancel order modal
            $('.cancel-order-btn').on('click', function () {
                const orderId = $(this).data('order-id');
                const pharmacyName = $(this).data('pharmacy');

                $('#cancel-order-id').val(orderId);
                $('#cancel-order-details').text(`Order #${orderId} from ${pharmacyName}`);
                $('#cancel-order-form').attr('action', '/Order/Cancel');

                $('#cancelOrderModal').modal('show');
            });

            // Show success/error messages from TempData
            @if (TempData["SuccessMessage"] != null)
            {
                    <text>showToast('@TempData["SuccessMessage"]', 'success');</text>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                    <text>showToast('@TempData["ErrorMessage"]', 'danger');</text>
            }

            // Toast notification function
            function showToast(message, type = 'info') {
                const toastHtml = `
                    <div class="toast align-items-center text-white bg-${type} border-0 position-fixed top-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $('body').append(toastHtml);
                const toast = $('.toast').last();
                const bootstrapToast = new bootstrap.Toast(toast, { delay: 4000 });
                bootstrapToast.show();

                toast.on('hidden.bs.toast', function () {
                    $(this).remove();
                });
            }

            function filterOrders(statusFilter, searchTerm) {
                let visibleCount = 0;
                let hasResults = false;

                $('.order-card').each(function () {
                    const orderStatus = $(this).data('status');
                    const pharmacyName = $(this).data('pharmacy');

                    let showOrder = true;

                    // Apply status filter
                    if (statusFilter !== 'all' && orderStatus !== statusFilter) {
                        showOrder = false;
                    }

                    // Apply search filter
                    if (searchTerm && !pharmacyName.includes(searchTerm.toLowerCase())) {
                        showOrder = false;
                    }

                    if (showOrder) {
                        $(this).fadeIn(300);
                        visibleCount++;
                        hasResults = true;
                    } else {
                        $(this).fadeOut(300);
                    }
                });

                if (hasResults) {
                    $('#no-results').fadeOut(300);
                } else {
                    $('#no-results').fadeIn(300);
                }
            }

        });
    </script>

    <style>
        .order-item {
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .order-item:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2) !important;
            }

        .rounded-4 {
            border-radius: 1.5rem !important;
        }

        .rounded-top-4 {
            border-top-left-radius: 1.5rem !important;
            border-top-right-radius: 1.5rem !important;
        }

        .rounded-end-3 {
            border-top-right-radius: 0.75rem !important;
            border-bottom-right-radius: 0.75rem !important;
        }

        .rounded-start-3 {
            border-top-left-radius: 0.75rem !important;
            border-bottom-left-radius: 0.75rem !important;
        }

        .btn.rounded-pill {
            border-radius: 50rem !important;
        }

        .bg-primary-subtle {
            background-color: #e0f2fe !important;
        }

        .bg-info-subtle {
            background-color: #cff4fc !important;
        }

        .bg-success-subtle {
            background-color: #d1e7dd !important;
        }

        .bg-warning-subtle {
            background-color: #fff3cd !important;
        }

        .progress.rounded-pill {
            border-radius: 50rem !important;
        }

        .lead-sm {
            font-size: 1.15rem;
        }

        .input-group-lg > .form-control {
            border-radius: 0 .75rem .75rem 0 !important;
        }

        .input-group-lg > .input-group-text {
            border-radius: .75rem 0 0 .75rem !important;
        }
    </style>
}

@functions {
    string GetStatusHeaderClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning-subtle text-dark",
            "Approved" => "bg-info-subtle text-dark",
            "Shipped" => "bg-primary-subtle text-dark",
            "Delivered" => "bg-success",
            "Cancelled" => "bg-secondary",
            "Rejected" => "bg-danger",
            _ => "bg-dark"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Pending Review",
            "Approved" => "Approved",
            "Shipped" => "In Transit",
            "Delivered" => "Delivered",
            "Cancelled" => "Cancelled",
            "Rejected" => "Rejected",
            _ => "Unknown"
        };
    }

    string GetStatusIcon(string status)
    {
        return status switch
        {
            "Pending" => "<i class='fas fa-clock'></i>",
            "Approved" => "<i class='fas fa-check'></i>",
            "Shipped" => "<i class='fas fa-shipping-fast'></i>",
            "Delivered" => "<i class='fas fa-check-circle'></i>",
            "Cancelled" => "<i class='fas fa-times'></i>",
            "Rejected" => "<i class='fas fa-times-circle'></i>",
            _ => "<i class='fas fa-question'></i>"
        };
    }

    string GetProgressBarClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Approved" => "bg-info",
            "Shipped" => "bg-primary",
            "Delivered" => "bg-success",
            _ => "bg-secondary"
        };
    }

    int GetProgressPercentage(string status)
    {
        return status switch
        {
            "Pending" => 25,
            "Approved" => 50,
            "Shipped" => 75,
            "Delivered" => 100,
            _ => 0
        };
    }

    string GetProgressText(string status)
    {
        return status switch
        {
            "Pending" => "Order received, waiting for pharmacy confirmation",
            "Approved" => "Order confirmed, preparing medicines",
            "Shipped" => "Order dispatched, on the way to you",
            "Delivered" => "Order delivered successfully",
            _ => "Status unknown"
        };
    }
}