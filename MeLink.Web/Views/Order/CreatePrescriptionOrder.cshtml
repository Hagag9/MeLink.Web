@model MeLink.Web.ViewModels.CreatePrescriptionOrderViewModel

@{
    ViewData["Title"] = "Order with Prescription";
}

<div class="modal fade" id="prescriptionLocationModal" tabindex="-1" aria-labelledby="prescriptionLocationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="prescriptionLocationModalLabel">Confirm Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (Model.IsPatient)
                {
                    <p>Please select your delivery location:</p>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="prescriptionLocationOptions" id="prescriptionOldLocation" value="old" checked>
                        <label class="form-check-label" for="prescriptionOldLocation">Old Location</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="prescriptionLocationOptions" id="prescriptionCurrentLocation" value="current">
                        <label class="form-check-label" for="prescriptionCurrentLocation">Current Location</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="prescriptionLocationOptions" id="prescriptionNewLocation" value="new">
                        <label class="form-check-label" for="prescriptionNewLocation">New Location</label>
                    </div>
                    <div id="prescriptionNewLocationInput" class="mt-2" style="display: none;">
                        <input type="text" class="form-control" placeholder="Enter new address">
                    </div>
                    <hr class="my-3">
                }

                <div>
                    <h6 class="fw-bold">Expected Delivery Time</h6>
                    <p class="text-muted mb-0">@(Model.IsPatient ? "60 minutes" : "Next day")</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirm-prescription-location">Confirm & Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-4 p-md-5">

                    <div class="text-center mb-4">
                        <div class="icon-circle bg-primary-subtle text-primary mx-auto mb-3">
                            <i class="fas fa-file-prescription fa-2x"></i>
                        </div>
                        <h2 class="h3 fw-bold">Order with Prescription</h2>
                        <p class="text-muted">From: <strong>@Model.SupplierName</strong></p>
                    </div>

                    <p class="card-text text-center text-muted small mb-4">
                        Please upload your prescription file. The pharmacy will contact you to confirm the order details and payment.
                    </p>

                    <form asp-action="CreatePrescriptionOrder" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <input type="hidden" asp-for="SupplierId" />
                        <input type="hidden" asp-for="SupplierName" />

                        <div class="mb-3">
                            <label asp-for="PrescriptionFile" class="form-label fw-semibold"></label>
                            <div class="input-group">
                                <input asp-for="PrescriptionFile" class="form-control d-none" type="file" required id="prescription-file-input" accept="image/*,.pdf,.doc,.docx" />
                                <label for="prescription-file-input" class="btn btn-outline-primary">
                                    <i class="fas fa-upload me-2"></i> Choose File
                                </label>
                                <span id="file-chosen-text" class="form-control text-muted" style="border-left: 0;">No file chosen</span>
                            </div>
                            <span asp-validation-for="PrescriptionFile" class="text-danger small"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Notes" class="form-label fw-semibold"></label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Any special instructions or details for the pharmacy..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger small"></span>
                        </div>

                        <div class="d-grid mt-4">
                            <button type="submit" class="btn btn-primary btn-lg rounded-pill">
                                <i class="fas fa-paper-plane me-2"></i> Submit Prescription
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="text-center mt-3">
                <a asp-action="NearbyPharmacies"  class="text-primary text-decoration-none small">
                    <i class="fas fa-arrow-left me-1"></i> Back to options
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const actualFileInput = document.getElementById('prescription-file-input');
        const fileChosenText = document.getElementById('file-chosen-text');

        actualFileInput.addEventListener('change', function() {
            fileChosenText.textContent = this.files.length > 0 ? this.files[0].name : 'No file chosen';
        });

        const form = document.querySelector('form');
        const locationModal = new bootstrap.Modal(document.getElementById('prescriptionLocationModal'));
        const newLocationInput = document.getElementById('prescriptionNewLocationInput');
        const confirmBtn = document.getElementById('confirm-prescription-location');

        form.addEventListener('submit', function(event) {
            event.preventDefault();
            locationModal.show();
        });

        document.querySelectorAll('input[name="prescriptionLocationOptions"]').forEach(radio => {
            radio.addEventListener('change', (event) => {
                if (event.target.value === 'new') {
                    newLocationInput.style.display = 'block';
                } else {
                    newLocationInput.style.display = 'none';
                }
            });
        });

        confirmBtn.addEventListener('click', function() {
            locationModal.hide();
            form.submit();
        });
    </script>

    <style>
        .icon-circle {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .bg-primary-subtle {
            background-color: #e0f2fe !important;
        }

        .rounded-4 {
            border-radius: 1.5rem !important;
        }
    </style>
}